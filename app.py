import streamlit as st
import pandas as pd
import numpy as np

st.set_page_config(page_title="AeroPredict", layout="wide")
st.title("ğŸ”§ AeroPredict â€“ PredicciÃ³n Inteligente de Mantenimiento AÃ©reo")

# IntroducciÃ³n
st.markdown("""
### Â¿QuÃ© es AeroPredict?
AeroPredict es una soluciÃ³n basada en IA que permite predecir fallos y necesidades de mantenimiento antes de que ocurran, reduciendo costes y mejorando la disponibilidad de la flota.

Esta demo muestra cÃ³mo se ingieren datos, se procesan con modelos predictivos, y se entregan alertas e informes Ãºtiles para tÃ©cnicos de mantenimiento.
""")

# SimulaciÃ³n de Ingreso de Datos
st.header("ğŸ“¥ Datos de Entrada del Sistema")
data = {
    'ID AviÃ³n': ['A320-ES123'],
    'Horas de vuelo': [14320],
    'Ciclos de despegue': [7250],
    'Temp. promedio motor (Â°C)': [635],
    'VibraciÃ³n eje (Hz)': [42.1],
    'Ãšltimo mantenimiento (dÃ­as)': [89]
}
df = pd.DataFrame(data)
st.dataframe(df)

# IA Predictiva
st.header("ğŸ§  MÃ³dulo de IA Predictiva")
st.markdown("""
El sistema utiliza modelos de supervivencia y detecciÃ³n de anomalÃ­as para anticipar:
- Tiempo restante hasta fallo (TRTF)
- Probabilidad de fallo crÃ­tico en 30 dÃ­as
- RecomendaciÃ³n de intervenciÃ³n
""")

# SimulaciÃ³n de salida del modelo
predict_result = {
    'Prob. fallo crÃ­tico en 30 dÃ­as (%)': [18.4],
    'Tiempo estimado hasta fallo (dÃ­as)': [41],
    'RecomendaciÃ³n': ['InspecciÃ³n preventiva del compresor del motor']
}
st.table(pd.DataFrame(predict_result))

# Dashboard de KPIs de Salud
st.header("ğŸ“Š Estado del Componente CrÃ­tico")
kpi1, kpi2, kpi3 = st.columns(3)
kpi1.metric("ğŸ”¥ Temp. motor", "635Â°C", "+5%")
kpi2.metric("ğŸ”§ VibraciÃ³n eje", "42.1 Hz", "+12%")
kpi3.metric("ğŸ•’ Ãšltimo mantenimiento", "89 dÃ­as", "â†‘")

# Footer
st.markdown("""
---
Demo desarrollada con [Streamlit](https://streamlit.io/) | Repositorio: [GitHub - AeroPredict](https://github.com/tuusuario/aeropredict-demo)
""")
